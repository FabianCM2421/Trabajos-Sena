/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import Controller.CotrollerMateria;
import Model.Enity.Materia;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author supap
 */
public class MateriaView extends javax.swing.JInternalFrame {

    CotrollerMateria controlM = new CotrollerMateria();
    Materia materia = new Materia();
    DefaultTableModel modelo;

    public MateriaView() {
        initComponents();
        ListarContinentes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablamaterias = new javax.swing.JTable();
        Btnguardar = new javax.swing.JButton();
        txtid = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        txtaMaterias = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jTextField3.setText("jTextField3");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        tablamaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CODIGO", "MATERIA"
            }
        ));
        tablamaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablamateriasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablamaterias);
        if (tablamaterias.getColumnModel().getColumnCount() > 0) {
            tablamaterias.getColumnModel().getColumn(2).setResizable(false);
        }

        Btnguardar.setText("Guardar");
        Btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnguardarActionPerformed(evt);
            }
        });

        jButton1.setText("Modificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtaMaterias))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Btnguardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtaMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Btnguardar)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addGap(74, 74, 74))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnguardarActionPerformed

        String codigo;
        String materias;

        if (!"".equals(txtid.getText()) || !"".equals(txtCodigo.getText()) || !"".equals(txtaMaterias.getText())) {
            codigo = txtCodigo.getText();
            materias = txtaMaterias.getText();

            controlM.Registar(codigo, materias);
            LimpiarTable();
            Limpiar();
            ListarContinentes();

            JOptionPane.showMessageDialog(null, "Cliente Registrado");

            Btnguardar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Los campos estan vacios");

        }
    }//GEN-LAST:event_BtnguardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int id;
        String codigo;
        String materias;

        if ("".equals(txtid.getText())) {
            JOptionPane.showMessageDialog(null, "Seleecione una fila");
        } else {
            if (!"".equals(txtCodigo.getText()) || !"".equals(txtaMaterias.getText())) {
                materia.setCodigo(txtCodigo.getText());

                id = Integer.parseInt(txtid.getText());
                codigo = txtCodigo.getText();
                materias = txtaMaterias.getText();

                controlM.Modificar(id, codigo, materias);
                JOptionPane.showMessageDialog(null, " Modificado");
                LimpiarTable();
                Limpiar();
                ListarContinentes();
//                Btnmodificar.setEnabled(false);
                Btnguardar.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, " No se pudeo Hcaer el Cambio");

            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void tablamateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamateriasMouseClicked
        Btnguardar.setEnabled(false);
        int fila = tablamaterias.rowAtPoint(evt.getPoint());
        txtid.setText(tablamaterias.getValueAt(fila, 0).toString());
        txtCodigo.setText(tablamaterias.getValueAt(fila, 1).toString());
        txtaMaterias.setText(tablamaterias.getValueAt(fila, 2).toString());

    }//GEN-LAST:event_tablamateriasMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      int Id;

        if (!txtid.getText().isEmpty()) {
            int pregunta = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar?");
            if (pregunta == 0) {
                Id = Integer.parseInt(txtid.getText());
                controlM.Eliminar(Id);
                LimpiarTable();
                Limpiar();
                ListarContinentes();

            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una fila.");
        }


    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btnguardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable tablamaterias;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtaMaterias;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
   public void ListarContinentes() {
        List<Materia> listarContinentes = materia.ListarContinentes();
        modelo = (DefaultTableModel) tablamaterias.getModel();
        Object[] ob = new Object[3];
        for (int i = 0; i < listarContinentes.size(); i++) {
            ob[0] = listarContinentes.get(i).getId();
            ob[1] = listarContinentes.get(i).getCodigo();
            ob[2] = listarContinentes.get(i).getMateriaNombre();

            modelo.addRow(ob);
        }
        tablamaterias.setModel(modelo);
    }

    public void LimpiarTable() {
        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
            i = i - 1;
        }
    }

    public void Limpiar() {
        txtid.setText("");
        txtCodigo.setText("");
        txtaMaterias.setText("");

    }

}
